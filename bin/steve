#!/bin/bash
#
# Steve CLI - Enhanced mcpomni-connect CLI with persona
#
# This script provides a streamlined way to start mcpomni-connect with preferred
# settings and support for Steve persona.
#
# Created: April 24, 2025
# Author: Steve (AI Intern)

# Default settings
MCPOMNI_ARGS="--dangerously-skip-permissions"

# Display help information
show_help() {
  echo "Steve - Personal Assistant powered by mcpomni-connect"
  echo ""
  echo "Usage: steve [options] [prompt]"
  echo ""
  echo "Background Options:"
  echo "  --background           Run in background mode (no interactive prompt)"
  echo "  --print TEXT           Use with --background to process text input"
  echo "  --out-file FILE        Specify output file for background mode"
  echo "  --status [ID]          Show status of all processes or specific process"
  echo "  --logs ID              View logs for a background process"
  echo "  --kill ID              Terminate a background process"
  echo "  --list                 List all background processes"
  echo ""
  echo "Persona Options:"
  echo "  --persona=PERSONA      Use alternative persona (default: steve)"
  echo ""
  echo "Routine Options:"
  echo "  --routine=ROUTINE      Run a specific routine (morning, evening, work)"
  echo ""
  echo "Display Options:"
  echo "  --help                 Show this help message"
  echo ""
  echo "Any other options will be passed directly to mcpomni-connect"
  echo ""
  echo "Examples:"
  echo "  steve \"What files are in this directory?\""
  echo "  steve --background --print \"Process this text in the background\" --out-file results.txt"
  echo "  steve --routine=morning"
  echo ""
}

# Get the directory where steve.js is installed
STEVE_DIR="$(dirname "$(readlink -f "$0")")/.."
STEVE_JS="$STEVE_DIR/src/steve.js"

# Function to generate a unique process ID
generate_process_id() {
  local timestamp=$(date +%s)
  local random_str=$(head /dev/urandom | tr -dc 'a-z0-9' | head -c 8)
  echo "${timestamp}-${random_str}"
}

# Handle help flag first
if [[ "$1" == "--help" ]]; then
  show_help
  exit 0
fi

# Check if steve.js exists
if [[ ! -f "$STEVE_JS" ]]; then
  echo "Error: Steve CLI not properly installed."
  echo "Could not find $STEVE_JS"
  exit 1
fi

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
  echo "Error: Node.js is required but not installed."
  echo "Please install Node.js to use Steve CLI."
  exit 1
fi

# Execute steve.js with provided arguments
node "$STEVE_JS" "$@"